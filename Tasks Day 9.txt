// Get all the countries from Asia continent /region using Filter function

Code: 

let xhr = new XMLHttpRequest();
xhr.open("GET", "https://restcountries.com/v2/all")
xhr.send();

xhr.onload = () => {
    let data = JSON.parse(xhr.response)
    let answer = data.filter((continent) => continent.region === "Asia")
    console.log(answer)
}



Description: Here, we have made use of the XHRHttpRequest method of window object of browser to get the data from rest country API. The filter function takes the whole data from 'data' variable and removes the data which does not have region a.k.a continent as Asia and gives us the result in answer variable.


// Get all the countries with a population of less than 2 lakhs using Filter function

Code:

let xhr = new XMLHttpRequest();
xhr.open("GET", "https://restcountries.com/v2/all")
xhr.send();

xhr.onload = () => {
    let data = JSON.parse(xhr.response)
    let answer = data.filter((dummy) => dummy.population < 200000)
    console.log(answer)
}



Description: We used the filter function using the same process and got the result. There are 62 countries with population less than 2 Lakhs.


// Print the following details name, capital, flag using forEach function

//To get the name:
Code:

let xhr = new XMLHttpRequest();
xhr.open("GET", "https://restcountries.com/v2/all")
xhr.send();

xhr.onload = () => {
    let data = JSON.parse(xhr.response)
    data.forEach(element => {
        console.log(element.name)
    });
}

Description: Here we have the same XHRHTTPRequest method to get the data from url. It gets stored in data variable. Then we use the forEach loop to get the names for country.

To get the capital names:
Code:

let xhr = new XMLHttpRequest();
xhr.open("GET", "https://restcountries.com/v2/all")
xhr.send();

xhr.onload = () => {
    let data = JSON.parse(xhr.response)
    data.forEach(element => {
        console.log(element.capital)
    });
}

Description: Here we have the same XHRHTTPRequest method to get the data from url. It gets stored in data variable. Then we use the forEach loop to get the names for capital using dot operator over element.

To get the flag:
Code:

let xhr = new XMLHttpRequest();
xhr.open("GET", "https://restcountries.com/v2/all")
xhr.send();

xhr.onload = () => {
    let data = JSON.parse(xhr.response)
    data.forEach(element => {
        console.log(element.flag)
    });
}

Description: Here we have used the same method as above except that after the dor operator after element in forEach loop we have used flag. It will give us the link in which flag image of each country is stored in the console. We can click that link and it will take us to website where flag is there.

// Print the total population of countries using reduce function

Code:

let xhr = new XMLHttpRequest();
xhr.open("GET", "https://restcountries.com/v2/all")
xhr.send();

xhr.onload = () => {
    let data = JSON.parse(xhr.response)
    let TotalPopulation = data.reduce((previousValue, currentValue) => previousValue + currentValue.population, 0);
    console.log(TotalPopulation);
}

Description: Here we have used reduce function to get the total of population of all the countries. The reduce function here runs through each element of the population proprty of data and sums the values to give us the result. the value is summed up in previousValue variable and the last value which the iterator is on gets added to previousValue variable with the help of our provided function and that summed up value is finally stored in TotalPopulation variable.




// Print the country which uses US Dollars as currency.

Code:

let xhr = new XMLHttpRequest();
xhr.open("GET", "https://restcountries.com/v2/all")
xhr.send();
xhr.onload = () => {
    let data = JSON.parse(xhr.response)
    let noCurrencyFiltered = data.filter((newData) => (newData.currencies !== undefined))
    let USCurrency = noCurrencyFiltered.filter((dollar) => (dollar.currencies[0].name === "United States dollar"))
    console.log(USCurrency)

}

Description: Here, we have first filterd the data of the countries which don'ythave any currency to avoid any error. Then we have used another filter method to filter the data of the countries which have US dollar as their currency using simple dot operator and stored it in USCurrency variable. Note that currency data of each country was stored in an array that's why we used dollar.currencies[0] in filter function.


